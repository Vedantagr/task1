# -*- coding: utf-8 -*-
"""Task 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O_y8187iewpviBsqDos2KsR431yQRr26

##*Task # 2*
####In this regression task we will predict the percentage of marks that a student is expected to score based upon the number of hours they studied.
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np  
import matplotlib.pyplot as plt  
# %matplotlib inline

url = "http://bit.ly/w-data"
s_data = pd.read_csv(url)
s_data.head(10)

"""### Plotting the distribution of scores"""

s_data.plot(x='Hours', y='Scores', style='o')  
plt.title('Hours vs Percentage')  
plt.xlabel('Hours Studied')  
plt.ylabel('Percentage Score')  
plt.show()

"""### Data Preparing"""

X = s_data.iloc[:, :-1].values  
y = s_data.iloc[:, 1].values

from sklearn.model_selection import train_test_split  
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

"""###Training And Testing of Algorithm"""

from sklearn.linear_model import LinearRegression  
regressor = LinearRegression()  
regressor.fit(X_train, y_train) 
print("Training and Testing complete.")

line = regressor.coef_*X+regressor.intercept_

plt.scatter(X, y)
plt.plot(X, line);
plt.xlabel('Hours Studied')  
plt.ylabel('Percentage Score')  
plt.show()

"""###Predictions"""

print(X_test) 
y_pred = regressor.predict(X_test)

df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  
df

pred = regressor.predict([[9.25]])
print("Predicted Score = {}".format(pred))

"""###Final Output"""

print("The Student Studies for 9.25 hours in a day would Probably score{}".format(pred))

"""###Evaluating the model"""

from sklearn import metrics  
print('MAE:', metrics.mean_absolute_error(y_test, y_pred))

